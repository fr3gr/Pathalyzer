<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>